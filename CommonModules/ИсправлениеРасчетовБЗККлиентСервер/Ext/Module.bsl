
#Область ПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ЭтоИсправление(ПараметрыИсправленногоДокумента) Экспорт
	Возврат ПараметрыИсправленногоДокумента <> Неопределено И ЗначениеЗаполнено(ПараметрыИсправленногоДокумента.Ссылка);
КонецФункции

Функция ИсправлениеВТекущемПериоде(ДанныеДокумента, ПараметрыИсправленногоДокумента, ИмяРеквизитаПериодаРегистрации = "ПериодРегистрации") Экспорт
	ЭтоИсправление = ЭтоИсправление(ПараметрыИсправленногоДокумента);
	
	Возврат ЭтоИсправление И ПараметрыИсправленногоДокумента.ПериодРегистрации = ДанныеДокумента[ИмяРеквизитаПериодаРегистрации];
	
КонецФункции

Функция ПерерасчетыДоступны(ДанныеДокумента, ОписаниеДокумента, ПараметрыИсправленногоДокумента, ВозможноВытеснение = Истина) Экспорт
	
	Если ОписаниеДокумента.НачисленияПерерасчетИмя = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;

	ЭтоИсправление = ЭтоИсправление(ПараметрыИсправленногоДокумента);
	
	Если ЭтоИсправление Тогда
		Результат = Не ИсправлениеВТекущемПериоде(ДанныеДокумента, ПараметрыИсправленногоДокумента, ОписаниеДокумента.МесяцНачисленияИмя)
			Или ПараметрыИсправленногоДокумента.ВыполнилДоначисление;
	Иначе
		ДатаНачалаСобытия = ПолучитьДатуНачалаСобытияДокумента(ДанныеДокумента, ОписаниеДокумента);
		
		Результат =	ВозможноВытеснение
			И ЗначениеЗаполнено(ДатаНачалаСобытия)
			И ДанныеДокумента[ОписаниеДокумента.МесяцНачисленияИмя] > ДатаНачалаСобытия;
	КонецЕсли;
	
	ЕстьСтрокиПерерасчета = ДанныеДокумента[ОписаниеДокумента.НачисленияПерерасчетИмя].Количество() > 0;
	
	Возврат Результат Или ЕстьСтрокиПерерасчета;
	
КонецФункции

Функция ПолучитьДатуНачалаСобытияДокумента(ДанныеДокумента, ОписаниеДокумента)
	Если Не ЗначениеЗаполнено(ОписаниеДокумента.ДатаНачалаСобытияИмя) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ДанныеДокумента[ОписаниеДокумента.ДатаНачалаСобытияИмя];
	
//	TODO поддержать многсотрудниковые документы
	
//	Если Не Форма.Объект.Свойство(ОписаниеДокумента.ДатаНачалаСобытияИмя, Результат) Тогда
//		
//		// Поддержка "многосотрудниковых" документов, у которых даты начала события могут быть разные по сотрудникам.
//		// Единая (минимальная) дата начала должна быть вычислена документом и храниться в реквизите формы.
//		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, ОписаниеДокумента.ДатаНачалаСобытияИмя) Тогда
//			Результат = Форма[ОписаниеДокумента.ДатаНачалаСобытияИмя];
//		КонецЕсли;
//		
//	КонецЕсли;
	
//	Возврат Результат;
	
КонецФункции


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Код процедур и функций

#КонецОбласти
