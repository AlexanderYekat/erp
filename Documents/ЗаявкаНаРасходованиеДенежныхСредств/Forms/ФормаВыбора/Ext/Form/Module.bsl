
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	Если Параметры.Свойство("Отбор")
	   И Параметры.Отбор.Свойство("Получатель")
	   И Не ЗначениеЗаполнено(Параметры.Отбор.Получатель) Тогда
		Параметры.Отбор.Удалить("Получатель");
	КонецЕсли;
	
	Если Параметры.Свойство("ТолькоОстатки")
		И Параметры.Свойство("Отбор") Тогда
		ОграничитьСписокПоОстаткам(Параметры);
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотБазоваяФункциональностьКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры
// Конец ИнтеграцияС1СДокументооборотом

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОграничитьСписокПоОстаткам(Параметры)

	ПараметрыОтбора = НовыйПараметрыОтбораОстатковПоЗаявкам();
	
	Для Каждого ЭлементОтбора Из Параметры.Отбор Цикл
		
		Если ПараметрыОтбора.Свойство(ЭлементОтбора.Ключ)
			И ЗначениеЗаполнено(Параметры.Отбор[ЭлементОтбора.Ключ]) Тогда
			ПараметрыОтбора.Вставить(ЭлементОтбора.Ключ, Параметры.Отбор[ЭлементОтбора.Ключ]);
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого ЭлементПараметра Из ПараметрыОтбора Цикл
		
		Если Параметры.Свойство(ЭлементПараметра.Ключ)
			И ЗначениеЗаполнено(Параметры[ЭлементПараметра.Ключ]) Тогда
			ПараметрыОтбора.Вставить(ЭлементПараметра.Ключ, Параметры[ЭлементПараметра.Ключ]);
		КонецЕсли;
		
	КонецЦикла;
	
	Если Параметры.Отбор.Свойство("ХозяйственнаяОперацияПоЗарплате") Тогда
		ПараметрыОтбора.Вставить("ХозяйственнаяОперация", Параметры.Отбор.ХозяйственнаяОперацияПоЗарплате);
	КонецЕсли;
	
	Результат = ДенежныеСредстваСервер.ЗапросОстатковЗаявокНаРасходованиеДенежныхСредств(ПараметрыОтбора);
	
	Если Не Результат.Пустой() Тогда
		
		СписокЗаявок = Результат.Выгрузить().ВыгрузитьКолонку("ЗаявкаНаРасходованиеДенежныхСредств");
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список,
			"Ссылка",
			СписокЗаявок,
			ВидСравненияКомпоновкиДанных.ВСписке);
		
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список,
			"Ссылка",
			Документы.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка());
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция НовыйПараметрыОтбораОстатковПоЗаявкам()

	Отбор = Новый Структура;
	Отбор.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	Отбор.Вставить("Контрагент", Справочники.Контрагенты.ПустаяСсылка());
	Отбор.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПустаяСсылка());
	Отбор.Вставить("ПодотчетноеЛицо", Неопределено);
	Отбор.Вставить("ФормаОплаты", Перечисления.ФормыОплаты.ПустаяСсылка());
	Отбор.Вставить("Валюта", Справочники.Валюты.ПустаяСсылка());
	Отбор.Вставить("БанковскийСчетКасса", Неопределено);
	Отбор.Вставить("БанковскийСчетПолучатель", Справочники.БанковскиеСчетаОрганизаций.ПустаяСсылка());
	Отбор.Вставить("КассаПолучатель", Справочники.Кассы.ПустаяСсылка());
	Отбор.Вставить("СписокКонтрагентов", Ложь);
	Отбор.Вставить("ОперацияССамозанятым", Неопределено);
	
	Возврат Отбор;

КонецФункции

#КонецОбласти
