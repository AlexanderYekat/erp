#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 21, 0);
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

Функция ВыгрузитьУведомлениеОбИсчисленныхСуммахНалогов(ДокументСсылка, УникальныйИдентификатор = Неопределено) Экспорт
	
	ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
	УведомлениеОбъект = ДокументОбъект.Уведомление.ПолучитьОбъект();
	Возврат УведомлениеОбъект.ВыгрузитьДокумент(УникальныйИдентификатор)
	
КонецФункции

#КонецОбласти

Функция СтатусДокумента(ДокументСсылка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДокументСсылка) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	РеквизитУведомление = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСсылка, "Уведомление");
	
	Возврат ИнтерфейсыВзаимодействияБРО.СостояниеДокумента(РеквизитУведомление);
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ОписаниеДокумента(ДокументСсылка) Экспорт
	
	ОписаниеДокумента = Новый Структура("Наименование, Сумма");
	
	Если ЗначениеЗаполнено(ДокументСсылка) Тогда
		РеквизитыДокумента    = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка,
			"Номер, Дата, СуммаДокумента, Уведомление");
		
		НаименованиеДокумента = ДокументСсылка.Метаданные().Синоним;
		НомерДокумента        = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыДокумента.Номер, Истина, Истина);
		ДатаДокумента         = Формат(РеквизитыДокумента.Дата,"ДЛФ=D");
		Статус                = ИнтерфейсыВзаимодействияБРО.ПредставлениеСостоянияДокумента(РеквизитыДокумента.Уведомление);
		
		ШаблонПредставления = НСтр("ru = '%1 %2 от %3 на сумму %4 (%5)';
									|en = '%1 %2 dated %3 in the amount of %4 (%5)'");
		
		ОписаниеДокумента.Наименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонПредставления,
			НаименованиеДокумента, НомерДокумента, ДатаДокумента, Формат(РеквизитыДокумента.СуммаДокумента, "ЧДЦ=2; ЧН=0,00"), Статус);
		ОписаниеДокумента.Сумма = РеквизитыДокумента.СуммаДокумента;
	КонецЕсли;
	
	Возврат ОписаниеДокумента;
	
КонецФункции

Функция ДатаНачалаСторнированияДублирующихУведомлений() Экспорт
	
	Возврат Дата(2023, 10, 1);
	
КонецФункции

Функция ПолучитьДанныеДляУведомления(ПараметрыЗаполнения) Экспорт
	
	ТаблицаНалогов = ПустаяСсылка().Налоги.ВыгрузитьКолонки();
	
	Организация = Неопределено;
	ДатаУведомления = '00010101';
	
	Если НЕ (ПараметрыЗаполнения.Свойство("Организация", Организация) И ЗначениеЗаполнено(Организация)
		И ПараметрыЗаполнения.Свойство("ДатаУведомления", ДатаУведомления) И ЗначениеЗаполнено(ДатаУведомления)) Тогда
		Возврат ТаблицаНалогов;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаУведомления", НачалоДня(ДатаУведомления));
	РегистрацияВНалоговомОргане = Справочники.РегистрацииВНалоговомОргане.РегистрацияВНалоговомОргане(Организация, ДатаУведомления);
	Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
	Запрос.УстановитьПараметр("КодПоОКТМО", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияВНалоговомОргане, "КодПоОКТМО"));
	ОтборНДФЛЗаПервуюПоловинуПериода = ПараметрыЗаполнения.Свойство("НДФЛЗаПервуюПоловинуПериода") И ПараметрыЗаполнения.НДФЛЗаПервуюПоловинуПериода;
	Запрос.УстановитьПараметр("НДФЛЗаПервуюПоловинуПериода", ОтборНДФЛЗаПервуюПоловинуПериода);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Расшифровка.ТипНалога КАК ТипНалога,
	|	Расшифровка.КодБК КАК КодБК,
	|	ЕСТЬNULL(Регистрации.Ссылка, &РегистрацияВНалоговомОргане) КАК РегистрацияВНалоговомОргане,
	|	ЕСТЬNULL(Регистрации.КодПоОКТМО, &КодПоОКТМО) КАК КодПоОКТМО,
	|	Расшифровка.НачалоПериода КАК НачалоПериода,
	|	Расшифровка.КонецПериода КАК КонецПериода,
	|	Расшифровка.СрокУплаты КАК СрокУплаты,
	|	СУММА(Расшифровка.Сумма) КАК Сумма
	|ИЗ
	|	Документ.НачислениеЕНП КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НачислениеЕНП.РасшифровкаНалогов КАК Расшифровка
	|		ПО ДанныеДокумента.Ссылка = Расшифровка.Ссылка
	|		И Расшифровка.ФормироватьУведомление
	|		И ДанныеДокумента.Проведен
	|		И ((&НДФЛЗаПервуюПоловинуПериода И ДанныеДокумента.ПредварительноеУведомлениеПоНДФЛ)
	|			ИЛИ НЕ &НДФЛЗаПервуюПоловинуПериода)
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РегистрацииВНалоговомОргане КАК Регистрации
	|	ПО Регистрации.Ссылка = (ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Расшифровка.Субконто1) = ТИП(Справочник.РегистрацииВНалоговомОргане)
	|			ТОГДА Расшифровка.Субконто1
	|		КОГДА ТИПЗНАЧЕНИЯ(Расшифровка.Субконто2) = ТИП(Справочник.РегистрацииВНалоговомОргане)
	|			ТОГДА Расшифровка.Субконто2
	|		КОГДА ТИПЗНАЧЕНИЯ(Расшифровка.Субконто3) = ТИП(Справочник.РегистрацииВНалоговомОргане)
	|			ТОГДА Расшифровка.Субконто3
	|		ИНАЧЕ &РегистрацияВНалоговомОргане
	|	КОНЕЦ)
	|
	|ГДЕ
	|	ДанныеДокумента.Организация = &Организация
	|	И Расшифровка.СрокУплаты > &ДатаУведомления
	|
	|СГРУППИРОВАТЬ ПО
	|	Расшифровка.ТипНалога,
	|	Расшифровка.КодБК,
	|	Расшифровка.НачалоПериода,
	|	Расшифровка.КонецПериода,
	|	Расшифровка.СрокУплаты,
	|	Регистрации.Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаНалогов.Добавить(), Выборка);
	КонецЦикла;
	
	Возврат ТаблицаНалогов;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
// Настройки - Структура - настройки подсистемы.
//
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.УведомлениеОСпецрежимахНалогообложения";
	КомандаПечати.Обработчик     = "РегламентированнаяОтчетностьУПКлиент.ВыполнитьКомандуПечатиУведомленияОбИсчисленныхСуммахНалогов";
	КомандаПечати.Идентификатор  = "Уведомление";
	КомандаПечати.Представление  = НСтр("ru = 'Уведомление об исчисленных суммах налога';
										|en = 'Calculated tax amount notification'");
	КомандаПечати.Порядок        = 10;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.УведомлениеОСпецрежимахНалогообложения";
	КомандаПечати.Обработчик     = "РегламентированнаяОтчетностьУПКлиент.ВыполнитьКомандуПечатиУведомленияОбИсчисленныхСуммахНалоговPDF417";
	КомандаПечати.Идентификатор  = "Уведомление";
	КомандаПечати.Представление  = НСтр("ru = 'Уведомление об исчисленных суммах налога (PDF417)';
										|en = 'Calculated tax amount notification (PDF417)'");
	КомандаПечати.СписокФорм     = "ФормаДокумента";
	КомандаПечати.Порядок        = 20;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли